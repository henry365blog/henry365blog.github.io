[
  
  
    {
      "title": "Các bước cài đặt Linux cơ bản", 
      "url": "/linux/cai-dat-linux-co-ban/", 
      "date": "08/04/2025", 
      "content": "Hướng dẫn cài đặt Linux…" 
    }
    
    ,
  
    {
      "title": "SUSE Linux Enterprise Server được dùng ở đâu?", 
      "url": "/linux/ung-dung-thuc-te-cua-sles/", 
      "date": "07/04/2025", 
      "content": "Với sự tập trung vào độ ổn định, bảo mật và hỗ trợ doanh nghiệp, SUSE Linux Enterprise Server (SLES) thường được tìm thấy trong các môi trường và ứng dụng quan trọng sau: Hạ tầng cho SAP: SLES là một trong những hệ điều hành Linux hàng đầu và được chứng nhận chính thức để chạy các giải pháp SAP, đặc biệt là SAP HANA và SAP S/4HANA. Nhiều doanh nghiệp lớn tin dùng SLES cho hệ thống SAP cốt lõi của họ. Máy chủ Doanh nghiệp: Dùng làm hệ điều hành cho các máy chủ ứng dụng, máy chủ web, máy chủ cơ sở dữ liệu, máy chủ file… đòi hỏi độ tin cậy và thời gian hoạt động cao. Hệ thống Mainframe (IBM Z &amp; LinuxONE): SLES có phiên bản đặc biệt được tối ưu hóa cho các hệ thống máy chủ lớn IBM Z và LinuxONE, tận dụng khả năng xử lý mạnh mẽ và độ tin cậy của nền tảng này. Điện toán hiệu năng cao (HPC): SLES for HPC cung cấp các công cụ và tối ưu hóa cần thiết để xây dựng và quản lý các cụm máy tính (cluster) hiệu năng cao cho nghiên cứu khoa học, mô phỏng kỹ thuật… Hệ thống Nhúng (Embedded): SUSE cũng cung cấp các phiên bản SLES tùy biến cho các hệ thống nhúng trong công nghiệp, bán lẻ (máy POS), y tế… nơi cần sự ổn định và vòng đời hỗ trợ dài. Ảo hóa và Đám mây: SLES là một hệ điều hành khách (guest OS) phổ biến trên các nền tảng ảo hóa (VMware, KVM, Xen) và được hỗ trợ tốt trên các đám mây công cộng lớn như Azure, AWS, Google Cloud. Nhìn chung, SLES là lựa chọn mạnh mẽ khi độ ổn định, bảo mật và hỗ trợ dài hạn là các yếu tố được ưu tiên hàng đầu cho hạ tầng IT của doanh nghiệp. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Một số tính năng và lợi ích nổi bật của SLES", 
      "url": "/linux/tinh-nang-noi-bat-cua-sles/", 
      "date": "07/04/2025", 
      "content": "SUSE Linux Enterprise Server (SLES) không chỉ nổi tiếng về sự ổn định mà còn đi kèm nhiều tính năng và lợi ích được thiết kế riêng cho môi trường doanh nghiệp: Hỗ trợ dài hạn (LTS &amp; LTSS): Giúp doanh nghiệp yên tâm triển khai và vận hành hệ thống trong nhiều năm mà không cần nâng cấp lớn thường xuyên, đồng thời vẫn nhận được các bản vá bảo mật quan trọng. Bảo mật tăng cường: SLES thường đạt các chứng nhận bảo mật quốc tế quan trọng như Common Criteria EAL 4+, FIPS 140-2, giúp đáp ứng các yêu cầu tuân thủ nghiêm ngặt. Nó cũng tích hợp các công cụ bảo mật mạnh mẽ. YaST (Yet another Setup Tool): Công cụ quản trị đồ họa và dòng lệnh độc đáo của SUSE, giúp đơn giản hóa việc cài đặt, cấu hình mạng, quản lý phần mềm, phân vùng đĩa và nhiều tác vụ quản trị hệ thống khác. SUSE Linux Enterprise Live Patching: Cho phép áp dụng các bản vá kernel quan trọng mà không cần khởi động lại máy chủ, tối đa hóa thời gian hoạt động (uptime) cho các hệ thống quan trọng. Khả năng sẵn sàng cao (High Availability Extension): Cung cấp giải pháp clustering mạnh mẽ để xây dựng các hệ thống có khả năng chịu lỗi cao, đảm bảo dịch vụ luôn sẵn sàng. Tối ưu cho Workload cụ thể: Có các phiên bản hoặc module tối ưu riêng cho SAP, HPC, IBM Z (mainframe), phù hợp với các nhu cầu đặc thù của doanh nghiệp. Những tính năng này làm cho SLES trở thành một nền tảng đáng tin cậy cho các ứng dụng và dịch vụ đòi hỏi hiệu năng, bảo mật và tính sẵn sàng cao. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "SUSE Linux Enterprise Server (SLES) là gì?", 
      "url": "/linux/suse-linux-enterprise-server-la-gi/", 
      "date": "07/04/2025", 
      "content": "SUSE Linux Enterprise Server, thường được gọi tắt là SLES, là một hệ điều hành dựa trên Linux được phát triển bởi SUSE, tập trung chủ yếu vào thị trường doanh nghiệp. Khác với các bản phân phối Linux cộng đồng như openSUSE (cũng do SUSE bảo trợ), SLES được xây dựng với mục tiêu mang lại sự ổn định, bảo mật cao, và hỗ trợ dài hạn cho các ứng dụng và hạ tầng quan trọng. Điểm chính về SLES: Nền tảng Doanh nghiệp: Được thiết kế cho máy chủ vật lý, ảo hóa, đám mây và container trong môi trường doanh nghiệp đòi hỏi độ tin cậy cao. Ổn định &amp; Hỗ trợ: SUSE cung cấp các chu kỳ hỗ trợ dài hạn (Long Term Service Pack Support - LTSS) cho SLES, đảm bảo các bản vá lỗi và cập nhật bảo mật trong nhiều năm. Tối ưu hóa: Thường được tối ưu hóa và chứng nhận để chạy các ứng dụng doanh nghiệp quan trọng như SAP HANA, các ứng dụng của IBM, và các hệ thống tính toán hiệu năng cao (HPC). Công cụ quản lý: Bao gồm công cụ quản trị hệ thống mạnh mẽ như YaST (Yet another Setup Tool) giúp đơn giản hóa việc cấu hình và quản lý. SLES là một lựa chọn hàng đầu cho các tổ chức cần một nền tảng Linux vững chắc, được hỗ trợ chuyên nghiệp cho các hệ thống kinh doanh cốt lõi của họ. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Phân biệt nhanh IaaS, PaaS và SaaS trong Cloud Computing", 
      "url": "/cloud/phan-biet-nhanh-iaas-paas-saas/", 
      "date": "07/04/2025", 
      "content": "Khi tìm hiểu về điện toán đám mây (Cloud Computing), bạn sẽ thường xuyên gặp các thuật ngữ IaaS, PaaS và SaaS. Đây là ba mô hình cung cấp dịch vụ đám mây chính. Hiểu rõ sự khác biệt giúp bạn lựa chọn giải pháp phù hợp. Hãy tưởng tượng việc làm một chiếc bánh Pizza: IaaS (Infrastructure as a Service - Hạ tầng như một Dịch vụ): Tương tự: Bạn thuê người ta lò nướng, bếp, gas, bàn ghế… (hạ tầng cơ bản). Bạn tự làm: Mua nguyên liệu (bột, sốt, topping…), nhào bột, làm bánh, nướng bánh, dọn dẹp. Cloud: Nhà cung cấp chỉ cung cấp hạ tầng ảo hóa cơ bản nhất: máy ảo (VMs), lưu trữ (storage), mạng (networking). Bạn phải tự cài đặt hệ điều hành, middleware, ứng dụng, quản lý vá lỗi HĐH… Ví dụ: Azure VMs, AWS EC2, Google Compute Engine. PaaS (Platform as a Service - Nền tảng như một Dịch vụ): Tương tự: Bạn đến một cửa hàng cho thuê chỗ làm bánh Pizza, họ có sẵn lò nướng, bếp, gas, bàn, bột đã nhào sẵn, bạn chỉ cần mang topping đến, tự làm và nướng bánh. Cloud: Nhà cung cấp quản lý hạ tầng, hệ điều hành, middleware. Bạn chỉ cần đưa code/ứng dụng của mình lên và chạy. Bạn không cần lo về việc vá lỗi HĐH hay quản lý server vật lý. Ví dụ: Azure App Service, AWS Elastic Beanstalk, Google App Engine, Heroku. SaaS (Software as a Service - Phần mềm như một Dịch vụ): Tương tự: Bạn gọi điện đặt Pizza giao tận nhà. Bạn không cần làm gì cả, chỉ việc ăn. Cloud: Nhà cung cấp cung cấp một phần mềm hoàn chỉnh, chạy trên hạ tầng của họ. Bạn chỉ cần đăng ký tài khoản và sử dụng qua trình duyệt hoặc ứng dụng. Bạn không quản lý bất cứ thứ gì về hạ tầng hay nền tảng. Ví dụ: Gmail, Microsoft 365, Salesforce, Dropbox. Tóm lại: Mức độ kiểm soát và trách nhiệm quản lý của bạn giảm dần từ IaaS -&gt; PaaS -&gt; SaaS. Lựa chọn mô hình nào phụ thuộc vào nhu cầu về kiểm soát, linh hoạt và nguồn lực quản trị của bạn. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Mẹo Linux: Tìm kiếm nội dung file nhanh với grep", 
      "url": "/linux/tips/meo-dung-grep-tim-kiem-nhanh/", 
      "date": "07/04/2025", 
      "content": "Khi làm việc trên Linux, việc tìm kiếm một đoạn văn bản cụ thể bên trong các file là tác vụ rất thường xuyên. Công cụ dòng lệnh grep là trợ thủ đắc lực cho việc này. Dưới đây là một vài cách dùng grep cơ bản và hữu ích: Tìm kiếm cơ bản: Tìm một chuỗi trong một file. grep \"chuoi_can_tim\" ten_file.txt Tìm kiếm không phân biệt hoa/thường (-i): grep -i \"SearchString\" logfile.log Tìm kiếm trong tất cả file của thư mục hiện tại: grep \"my_variable\" * (Lưu ý: Dấu * có thể bao gồm cả thư mục con, gây lỗi. Dùng các cách dưới an toàn hơn). Tìm kiếm đệ quy trong thư mục con (-r hoặc -R): Tìm chuỗi trong tất cả file thuộc thư mục hiện tại và các thư mục con của nó. grep -r \"api_key\" . (Dấu . đại diện cho thư mục hiện tại). Chỉ hiển thị tên file chứa chuỗi (-l): Rất hữu ích khi bạn chỉ cần biết file nào chứa thông tin cần tìm. grep -rl \"config_value\" /etc/ Hiển thị số dòng xung quanh kết quả (-C, -B, -A): -C n: Hiển thị n dòng ngữ cảnh trước và sau dòng khớp. Ví dụ: grep -C 2 \"error\" system.log -B n: Hiển thị n dòng trước dòng khớp. -A n: Hiển thị n dòng sau dòng khớp. grep là một công cụ rất mạnh mẽ với nhiều tùy chọn khác. Nắm vững các cách dùng cơ bản này sẽ giúp bạn xử lý công việc trên Linux hiệu quả hơn rất nhiều. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Giới thiệu về Cloud Computing", 
      "url": "/cloud/bai-viet-ve-cloud/", 
      "date": "07/04/2025", 
      "content": "Nội dung bài viết về Cloud Computing…" 
    }
    
    ,
  
    {
      "title": "Lựa chọn Công cụ Phù hợp cho Dự án Cá nhân", 
      "url": "/du-an/lua-chon-cong-cu-cho-du-an-ca-nhan/", 
      "date": "07/04/2025", 
      "content": "Sau khi đã lên ý tưởng và kế hoạch cơ bản cho dự án cá nhân, việc lựa chọn đúng công cụ (tools) sẽ giúp quá trình phát triển của bạn hiệu quả hơn. Dưới đây là một số loại công cụ cần cân nhắc: Ngôn ngữ lập trình &amp; Framework: Dựa trên loại dự án (web, mobile, desktop, script…) và mục tiêu học hỏi của bạn. Ví dụ: Python (Django, Flask), JavaScript (Node.js, React, Vue), Java (Spring), C# (.NET)… Hãy chọn thứ bạn quen thuộc hoặc muốn học nhất. Trình soạn thảo Code (Code Editor) / IDE: Nơi bạn sẽ viết code. VS Code là lựa chọn cực kỳ phổ biến và mạnh mẽ, miễn phí. Các lựa chọn khác: Sublime Text, Atom, hoặc các IDE chuyên dụng như IntelliJ IDEA (Java), PyCharm (Python), Visual Studio (C#/.NET). Hệ thống Quản lý Phiên bản (Version Control System - VCS): Git là tiêu chuẩn. Bắt buộc phải dùng để theo dõi thay đổi, sao lưu code, và cộng tác (nếu có). Kết hợp với các nền tảng hosting như GitHub, GitLab, Bitbucket. Công cụ Quản lý Công việc/Issue Tracking: Giúp theo dõi các nhiệm vụ cần làm, lỗi cần sửa. Đơn giản: Dùng file text, Trello, Todoist. Chuyên nghiệp hơn: GitHub Issues, Jira (thường cho dự án lớn), Asana. Môi trường/Công cụ Build &amp; Deployment: Tùy thuộc vào dự án: Docker, Webpack, Gulp, Maven, Gradle, các dịch vụ CI/CD (GitHub Actions, Jenkins…). Việc chọn đúng bộ công cụ ban đầu giúp bạn tập trung vào việc phát triển tính năng thay vì vật lộn với môi trường làm việc. ** Henry Blog 365 **" 
    }
    
    ,
  
    {
      "title": "Lời chào từ HenryVo - Chào mừng bạn đến với Blog Công nghệ!", 
      "url": "/categories/gioi-thieu/", 
      "date": "06/04/2025", 
      "content": "Xin chào tất cả các bạn! Tôi là HenryVo, và tôi rất vui mừng chào đón bạn đến với không gian chia sẻ kiến thức và đam mê công nghệ của mình - Blog của HenryVo. Trong thế giới công nghệ thông tin không ngừng biến đổi, việc cập nhật kiến thức, khám phá các giải pháp mới và tìm hiểu những ý tưởng sáng tạo là điều vô cùng cần thiết. Đó chính là lý do tôi tạo ra blog này: để cùng nhau khám phá, học hỏi và chia sẻ những kinh nghiệm thực tế trong lĩnh vực IT. Bạn có thể mong đợi gì ở blog này? Giải pháp Công nghệ: Phân tích, đánh giá và hướng dẫn các giải pháp IT hữu ích cho công việc và cuộc sống. Thủ thuật Thực tế: Những mẹo nhỏ, kinh nghiệm xử lý sự cố, tối ưu hóa hệ thống mà tôi đã đúc kết được. Ý tưởng Sáng tạo: Khám phá những cách tiếp cận mới, những dự án cá nhân thú vị hoặc những công nghệ đang là xu hướng. Chia sẻ Kiến thức: Các bài viết đi sâu vào một chủ đề công nghệ cụ thể (lập trình, mạng, bảo mật, hệ thống…). Mục tiêu của tôi là biến blog này thành một nguồn tài nguyên giá trị, nơi bạn không chỉ tìm thấy thông tin hữu ích mà còn có thể trao đổi, thảo luận và cùng nhau phát triển. Hãy thường xuyên ghé thăm, đọc các bài viết và đừng ngần ngại để lại bình luận hay câu hỏi nhé. Sự tương tác của các bạn chính là động lực lớn nhất cho tôi! Một lần nữa, chào mừng bạn đến với HENRY BLOG 365 !!!! Trân trọng, HenryVo" 
    }
    
    ,
  
    {
      "title": "Triển khai Web App đơn giản với Azure App Service", 
      "url": "/cloud/microsoft/trien-khai-web-app-voi-azure-app-service/", 
      "date": "06/04/2025", 
      "content": "Nếu bạn cần host một ứng dụng web hoặc API mà không muốn bận tâm nhiều đến việc quản lý máy chủ, hệ điều hành, thì Azure App Service là một lựa chọn tuyệt vời. Đây là một dịch vụ PaaS (Platform as a Service) mạnh mẽ của Azure. Azure App Service là gì? Azure App Service là một nền tảng được quản lý hoàn toàn để xây dựng, triển khai và mở rộng quy mô các ứng dụng web, di động và API. Bạn chỉ cần tập trung vào code của mình, Azure sẽ lo phần hạ tầng bên dưới. Lợi ích chính: Không cần quản lý hạ tầng: Azure tự quản lý hệ điều hành, bản vá, bảo mật nền tảng. Hỗ trợ đa ngôn ngữ/nền tảng: Hỗ trợ .NET, .NET Core, Java, Ruby, Node.js, PHP, Python, Docker Container. Tự động mở rộng (Auto-scaling): Dễ dàng cấu hình để tự động tăng hoặc giảm số lượng máy chủ chạy ứng dụng dựa trên tải. Tích hợp CI/CD: Dễ dàng thiết lập quy trình triển khai tự động từ Azure DevOps, GitHub, Bitbucket… Deployment Slots: Tạo môi trường staging để kiểm thử phiên bản mới trước khi đưa ra production mà không gây gián đoạn. Bảo mật tích hợp: Hỗ trợ HTTPS, xác thực/ủy quyền, tích hợp Azure AD. Khi nào dùng App Service? Host các trang web (tĩnh và động). Triển khai các API RESTful. Backend cho ứng dụng di động. Các ứng dụng cần khả năng mở rộng linh hoạt và không muốn quản lý máy chủ. Triển khai lên App Service rất đơn giản, bạn có thể đẩy code trực tiếp từ Git, Visual Studio, hoặc dùng các công cụ dòng lệnh. Đây là dịch vụ PaaS hàng đầu giúp tăng tốc độ phát triển và đơn giản hóa vận hành ứng dụng web. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Máy ảo Azure (Virtual Machines) - Khái niệm cơ bản", 
      "url": "/cloud/microsoft/may-ao-azure-virtual-machines-co-ban/", 
      "date": "05/04/2025", 
      "content": "Một trong những dịch vụ nền tảng và được sử dụng nhiều nhất trên Azure chính là Azure Virtual Machines (VMs). Đây là một dịch vụ thuộc nhóm IaaS (Infrastructure as a Service). Azure VM là gì? Hiểu đơn giản, Azure VM cho phép bạn tạo và sử dụng các máy ảo (máy tính ảo) trên nền tảng đám mây của Microsoft. Bạn có toàn quyền kiểm soát hệ điều hành, cài đặt phần mềm và cấu hình như một máy chủ vật lý thông thường. Khi nào nên dùng Azure VM? Di chuyển ứng dụng từ máy chủ vật lý lên đám mây (Lift-and-shift). Chạy các ứng dụng đòi hỏi quyền kiểm soát hệ điều hành đầy đủ. Môi trường phát triển và kiểm thử (Dev/Test). Chạy các máy chủ cơ sở dữ liệu, máy chủ web, domain controller… Các yếu tố chính khi tạo VM: Hệ điều hành: Windows Server, Linux (nhiều bản phân phối như Ubuntu, CentOS…). Kích thước (Size): Xác định số lượng CPU, RAM, dung lượng lưu trữ tạm thời (khác với đĩa dữ liệu). Có rất nhiều loại kích thước phù hợp với các nhu cầu khác nhau (đa dụng, tối ưu CPU, tối ưu bộ nhớ…). Khu vực (Region): Chọn trung tâm dữ liệu (datacenter) nơi VM sẽ được đặt, ảnh hưởng đến độ trễ và tuân thủ dữ liệu. Lưu trữ (Storage): Chọn loại đĩa cho hệ điều hành và dữ liệu (HDD, Standard SSD, Premium SSD). Mạng (Networking): Cấu hình mạng ảo (VNet), địa chỉ IP, nhóm bảo mật mạng (NSG)… Việc tạo một máy ảo Azure có thể được thực hiện dễ dàng thông qua Azure Portal, Azure CLI hoặc PowerShell. Đây là bước khởi đầu tuyệt vời để làm quen với hạ tầng đám mây. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Giới thiệu tổng quan về Microsoft Azure", 
      "url": "/cloud/microsoft/gioi-thieu-ve-microsoft-azure/", 
      "date": "04/04/2025", 
      "content": "Chào mừng các bạn đến với loạt bài tìm hiểu về Microsoft Azure! Microsoft Azure là gì? Microsoft Azure là một nền tảng điện toán đám mây toàn diện được cung cấp bởi Microsoft. Nó cung cấp hơn 200 sản phẩm và dịch vụ đám mây được thiết kế để giúp bạn xây dựng, chạy và quản lý các ứng dụng trên nhiều đám mây, tại chỗ và ở biên (edge). Các khái niệm cốt lõi: IaaS (Infrastructure as a Service): Cung cấp hạ tầng cơ bản như máy ảo (VMs), lưu trữ (Storage), mạng (Networking). Ví dụ: Azure Virtual Machines. PaaS (Platform as a Service): Cung cấp nền tảng để phát triển, chạy và quản lý ứng dụng mà không cần lo về hạ tầng bên dưới. Ví dụ: Azure App Service, Azure SQL Database. SaaS (Software as a Service): Cung cấp phần mềm hoàn chỉnh dưới dạng dịch vụ. Ví dụ: Microsoft 365. Một số dịch vụ phổ biến: Azure Virtual Machines (Máy ảo) Azure App Service (Dịch vụ ứng dụng web) Azure Storage (Blob, Files, Queues, Tables) Azure SQL Database (Cơ sở dữ liệu SQL) Azure Functions (Serverless compute) Azure mang lại sự linh hoạt, khả năng mở rộng và độ tin cậy cao, giúp các tổ chức và cá nhân đổi mới nhanh chóng hơn. Trong các bài viết tiếp theo, chúng ta sẽ tìm hiểu sâu hơn về một số dịch vụ cụ thể. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Tìm hiểu về Phân quyền File trong Linux", 
      "url": "/linux/tim-hieu-ve-phan-quyen-file-trong-linux/", 
      "date": "22/03/2025", 
      "content": "Một trong những khái niệm quan trọng và cơ bản về bảo mật trong Linux là hệ thống phân quyền file (file permissions). Nó xác định ai có thể làm gì đối với một file hoặc thư mục. Xem quyền hạn: Bạn có thể xem quyền hạn của các file/thư mục bằng lệnh ls -l. Output sẽ có dạng như sau: -rwxr-xr– 1 user group 4096 Mar 22 16:30 file.txt drwxr-x— 2 user group 4096 Mar 21 14:00 thu_muc Giải thích các ký tự đầu tiên: -: Đây là một file thông thường. d: Đây là một thư mục (directory). l: Đây là một liên kết tượng trưng (symbolic link). Giải thích 9 ký tự tiếp theo (Quyền hạn): 9 ký tự này được chia thành 3 nhóm, mỗi nhóm 3 ký tự: Nhóm 1 (ký tự 2-4): Quyền của Chủ sở hữu (User/Owner - u) Nhóm 2 (ký tự 5-7): Quyền của Nhóm sở hữu (Group - g) Nhóm 3 (ký tự 8-10): Quyền của Những người khác (Others - o) Trong mỗi nhóm 3 ký tự, ý nghĩa là: r (Read): Quyền đọc. Với file: Được xem nội dung file. Với thư mục: Được liệt kê (ls) các file/thư mục bên trong. w (Write): Quyền ghi. Với file: Được sửa đổi nội dung file. Với thư mục: Được tạo, xóa, đổi tên file/thư mục bên trong (kể cả khi không có quyền ghi lên file đó). x (Execute): Quyền thực thi. Với file: Được chạy file như một chương trình (nếu là file thực thi hoặc script). Với thư mục: Được phép cd (đi vào) thư mục đó. -: Không có quyền tương ứng. Ví dụ đọc quyền: -rwxr-xr--: Chủ sở hữu (u): Có quyền đọc (r), ghi (w), thực thi (x). Nhóm sở hữu (g): Có quyền đọc (r), không có quyền ghi (-), có quyền thực thi (x). Người khác (o): Có quyền đọc (r), không có quyền ghi (-), không có quyền thực thi (-). drwxr-x---: Đây là một thư mục (d). Chủ sở hữu (u): Đọc, ghi, thực thi (đi vào). Nhóm sở hữu (g): Đọc, không ghi, thực thi (đi vào). Người khác (o): Không có quyền gì. Thay đổi quyền (Lệnh chmod): Lệnh chmod (change mode) được dùng để thay đổi quyền hạn. Có hai cách phổ biến: Dùng ký hiệu (Symbolic notation): chmod [u|g|o|a][+|-|=][r|w|x] file/thu_muc u=user, g=group, o=other, a=all +=thêm quyền, -=bỏ quyền, ==đặt chính xác quyền Ví dụ: chmod u+x script.sh (Thêm quyền execute cho user), chmod go-w file.txt (Bỏ quyền write cho group và others). Dùng số (Octal notation): Mỗi quyền được gán một giá trị số: r=4, w=2, x=1. Cộng các giá trị trong một nhóm để ra số đại diện cho nhóm đó. rwx = 4+2+1 = 7 rw- = 4+2+0 = 6 r-x = 4+0+1 = 5 r-- = 4+0+0 = 4 Ví dụ: chmod 754 file.txt có nghĩa là: User: 7 (rwx) Group: 5 (r-x) Others: 4 (r–) Hiểu rõ về phân quyền là rất quan trọng để bảo vệ dữ liệu và đảm bảo hệ thống Linux hoạt động đúng cách. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Một số câu lệnh Linux cơ bản cần biết", 
      "url": "/linux/tips/mot-so-cau-lenh-linux-co-ban-can-biet/", 
      "date": "21/03/2025", 
      "content": "Làm việc với Linux thường gắn liền với giao diện dòng lệnh (Command Line Interface - CLI). Dưới đây là một số câu lệnh cực kỳ cơ bản và hữu ích bạn nên biết khi bắt đầu: pwd (Print Working Directory): Hiển thị thư mục hiện tại bạn đang đứng trong đó. Ví dụ: pwd ls (List): Liệt kê các file và thư mục trong thư mục hiện tại. ls: Liệt kê cơ bản. ls -l: Hiển thị chi tiết hơn (quyền, chủ sở hữu, kích thước, ngày sửa đổi). ls -a: Hiển thị cả các file/thư mục ẩn (bắt đầu bằng dấu .). ls -lh: Kết hợp -l và -h (human-readable) để hiển thị kích thước dễ đọc hơn (KB, MB…). cd (Change Directory): Thay đổi thư mục làm việc hiện tại. cd ten_thu_muc: Đi vào thư mục con ten_thu_muc. cd ..: Đi lên thư mục cha. cd ~ hoặc cd: Đi về thư mục nhà (home directory) của người dùng hiện tại. cd /: Đi về thư mục gốc (root directory) của hệ thống. mkdir (Make Directory): Tạo một thư mục mới. Ví dụ: mkdir ten_thu_muc_moi touch: Tạo một file trống hoặc cập nhật thời gian sửa đổi của file đã có. Ví dụ: touch ten_file_moi.txt cp (Copy): Sao chép file hoặc thư mục. cp file_nguon file_dich: Sao chép file_nguon thành file_dich. cp file1 file2 thu_muc_dich: Sao chép file1 và file2 vào thu_muc_dich. cp -r thu_muc_nguon thu_muc_dich: Sao chép toàn bộ thu_muc_nguon và nội dung bên trong nó vào thu_muc_dich (cần tùy chọn -r cho thư mục). mv (Move): Di chuyển hoặc đổi tên file/thư mục. mv file_cu file_moi: Đổi tên file_cu thành file_moi. mv file1 file2 thu_muc_dich: Di chuyển file1 và file2 vào thu_muc_dich. rm (Remove): Xóa file. Cẩn thận khi dùng lệnh này! rm ten_file: Xóa file ten_file. rm -r ten_thu_muc: Xóa thư mục ten_thu_muc và toàn bộ nội dung bên trong (cần tùy chọn -r). rm -f ten_file: Xóa file mà không cần hỏi xác nhận (force). Đây chỉ là những lệnh cơ bản nhất. Thành thạo chúng là bước đầu tiên để làm chủ giao diện dòng lệnh Linux. Henry Blog 365" 
    }
    
    ,
  
    {
      "title": "Linux là gì? Giới thiệu cơ bản cho người mới bắt đầu", 
      "url": "/linux/linux-la-gi-gioi-thieu-co-ban/", 
      "date": "20/03/2025", 
      "content": "Nếu bạn đang tìm hiểu về hệ điều hành hoặc làm việc trong lĩnh vực công nghệ thông tin, chắc hẳn bạn đã từng nghe đến cái tên “Linux”. Vậy Linux là gì? Linux về cơ bản là một nhân hệ điều hành (kernel), được Linus Torvalds giới thiệu lần đầu vào năm 1991. Kernel là thành phần cốt lõi, quản lý tài nguyên phần cứng của máy tính và giao tiếp giữa phần cứng và phần mềm. Tuy nhiên, khi nói đến “Linux” mà chúng ta thường sử dụng, chúng ta thường đề cập đến một hệ điều hành hoàn chỉnh dựa trên nhân Linux, kết hợp với các phần mềm hệ thống và ứng dụng từ dự án GNU và nhiều nguồn khác. Các hệ điều hành này được gọi là các bản phân phối Linux (Linux distributions hay distros). Một số bản phân phối phổ biến: Ubuntu: Rất phổ biến, thân thiện với người dùng mới, cộng đồng hỗ trợ lớn. Debian: Nền tảng của Ubuntu, ổn định, kho phần mềm lớn. Fedora/CentOS/RHEL: Thường dùng trong môi trường doanh nghiệp, máy chủ. Fedora là bản thử nghiệm cho RHEL (Red Hat Enterprise Linux). CentOS (gần đây là các biến thể như Rocky Linux, AlmaLinux) là bản tương thích miễn phí với RHEL. Arch Linux: Dành cho người dùng thích tùy biến sâu, luôn cập nhật phần mềm mới nhất. Và hàng trăm bản phân phối khác… Tại sao Linux phổ biến? Mã nguồn mở: Ai cũng có thể xem, sửa đổi và phân phối lại mã nguồn. Miễn phí: Hầu hết các bản phân phối Linux đều miễn phí sử dụng. Ổn định và Bảo mật: Được cộng đồng lớn kiểm tra và phát triển, thường ít bị virus hơn Windows. Linh hoạt: Có thể chạy trên nhiều loại phần cứng, từ máy tính cá nhân, máy chủ, siêu máy tính đến các thiết bị nhúng, điện thoại (Android dùng nhân Linux). Mạnh mẽ cho lập trình viên và quản trị hệ thống: Cung cấp môi trường dòng lệnh mạnh mẽ và nhiều công cụ phát triển. Linux là một phần quan trọng của thế giới công nghệ hiện đại, vận hành phần lớn các máy chủ web, siêu máy tính và nhiều thiết bị thông minh quanh ta. Henry Blog 365" 
    }
    
    
  
]